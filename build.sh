#!/bin/bash

# MacPortScanner - –°–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

set -e

echo "üî® MacPortScanner - –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "===================================="

# –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–±–æ—Ä–∫–∏
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫..."
rm -rf build/
rm -rf dist/

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏
mkdir -p build/dist

# –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º TypeScript –¥–ª—è Electron
echo "üî® –ö–æ–º–ø–∏–ª—è—Ü–∏—è Electron..."
npx tsc -p tsconfig.electron.json --outDir build/dist

# –°–æ–±–∏—Ä–∞–µ–º React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo "‚öõÔ∏è  –°–±–æ—Ä–∫–∞ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
npx vite build --outDir build/dist

# –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –¥–ª—è electron-builder
echo "üìÅ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–±–æ—Ä–∫–∏..."
cp -r build/dist ./
# –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ main.js –∏ preload.js –µ—Å—Ç—å –≤ dist
cp build/dist/main.js dist/ 2>/dev/null || echo "main.js —É–∂–µ –≤ dist"
cp build/dist/preload.js dist/ 2>/dev/null || echo "preload.js —É–∂–µ –≤ dist"

# –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo "üì¶ –°–±–æ—Ä–∫–∞ macOS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
npx electron-builder --mac

# –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ build
echo "üóÇÔ∏è  –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤..."
if [ -d "release" ]; then
    mv release build/
fi

echo ""
echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–±–æ—Ä–∫–∏:"
if [ -d "build/release" ]; then
    ls -la build/release/
fi

echo ""
echo "üéâ –ì–æ—Ç–æ–≤–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ build/release/"