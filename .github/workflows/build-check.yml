name: 🔍 Build Check

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'

env:
  NODE_VERSION: '18'

jobs:
  build-check:
    name: 🔨 Build Check
    runs-on: macos-14
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🖥️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔍 Verify package.json version
        run: |
          echo "🔍 Verifying package.json version..."
          if [ ! -f "package.json" ]; then
            echo "❌ package.json not found"
            exit 1
          fi

          # Проверяем что версия указана
          VERSION=$(grep '"version"' package.json | sed 's/.*"version": "\(.*\)".*/\1/' | tr -d '"' | tr -d ',')
          if [ -z "$VERSION" ]; then
            echo "❌ Version field is empty or not found in package.json"
            echo "📄 Current package.json content:"
            cat package.json
            exit 1
          fi

          echo "✅ Version found: $VERSION"

          # Проверяем формат версии (semver)
          if ! echo "$VERSION" | grep -qE '^[0-9]+\.[0-9]+\.[0-9]+$'; then
            echo "❌ Version format is invalid. Expected: x.y.z, Got: $VERSION"
            exit 1
          fi

          echo "✅ Version format is valid"

      - name: 📦 Install dependencies
        run: |
          echo "📦 Installing dependencies..."
          npm install

      - name: 🔍 Run linting
        run: |
          echo "🔍 Skipping ESLint for now..."
          echo "✅ Linting skipped"
        continue-on-error: true

      - name: 🔧 Type checking
        run: |
          echo "🔧 Running TypeScript type check..."
          npm run type-check

      - name: ⚛️ Build React application
        run: |
          echo "⚛️ Building React application..."
          npx vite build --outDir build/dist

      - name: 🔨 Build Electron main process
        run: |
          echo "🔨 Compiling TypeScript for Electron..."
          # Компилируем в отдельную папку, чтобы не перезаписать React build
          mkdir -p build/electron
          npx tsc -p tsconfig.electron.json --outDir build/electron
          echo "📁 Checking compiled files..."
          ls -la build/electron/ || echo "build/electron/ folder not found"
          
          # Копируем скомпилированные файлы в build/dist
          if [ -f "build/electron/main.js" ]; then
            echo "✅ main.js found at build/electron/main.js"
            cp build/electron/main.js build/dist/main.js
          else
            echo "❌ main.js not found, checking structure:"
            find build/electron -name "*.js" -type f
            exit 1
          fi
          
          if [ -f "build/electron/preload.js" ]; then
            echo "✅ preload.js found at build/electron/preload.js"
            cp build/electron/preload.js build/dist/preload.js
          else
            echo "❌ preload.js not found, checking structure:"
            find build/electron -name "*.js" -type f
            exit 1
          fi

      - name: 📁 Verify build artifacts
        run: |
          echo "📁 Verifying build artifacts..."
          echo "📂 Current build structure:"
          find build/dist -type f -name "*.js" -o -name "*.html" -o -name "*.css" | head -20
          
          # Проверяем что все файлы созданы
          if [ ! -f "build/dist/main.js" ]; then
            echo "❌ main.js not found in build/dist/"
            echo "🔍 Searching for main.js..."
            find . -name "main.js" -type f
            exit 1
          fi
          
          if [ ! -f "build/dist/preload.js" ]; then
            echo "❌ preload.js not found in build/dist/"
            echo "🔍 Searching for preload.js..."
            find . -name "preload.js" -type f
            exit 1
          fi
          
          if [ ! -f "build/dist/index.html" ]; then
            echo "❌ index.html not found in build/dist/"
            echo "🔍 Searching for index.html..."
            find . -name "index.html" -type f
            exit 1
          fi
          
          echo "✅ All build artifacts present"
          
          # Показываем размеры
          echo "📊 Build sizes:"
          du -sh build/dist/* | head -10

      - name: 🧪 Test build (dry run)
        run: |
          echo "🧪 Testing electron-builder (dry run)..."
          cp -r build/dist ./dist
          npx electron-builder --mac --dir --publish never
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: ✅ Build Success
        run: |
          echo "✅ Build check completed successfully!"
          echo "🎯 Ready for release when tagged"