name: Test MacPortScanner

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-rust:
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          Core/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Check Rust formatting
      working-directory: Core
      run: cargo fmt --check
      
    - name: Run Clippy
      working-directory: Core
      run: cargo clippy -- -D warnings
      
    - name: Run Rust tests
      working-directory: Core
      run: cargo test --verbose
      
    - name: Run Rust benchmarks
      working-directory: Core
      run: cargo bench --no-run
      
  test-integration:
    runs-on: macos-14
    needs: test-rust
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
        
    - name: Build Rust Core
      working-directory: Core
      run: cargo build --release
      
    - name: Verify Rust library
      working-directory: Core
      run: |
        ls -la target/release/
        file target/release/libmacportscan_core.a || echo "Static library not found, checking for dylib"
        file target/release/libmacportscan_core.dylib || echo "Dynamic library not found"
        
    - name: Check Swift files syntax
      working-directory: UI/MacPortScanner
      run: |
        echo "Checking Swift files for basic syntax..."
        for file in *.swift; do
          echo "Checking $file"
          swift -frontend -parse "$file" || echo "Warning: $file has syntax issues"
        done